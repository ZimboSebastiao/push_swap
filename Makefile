define LOGO
\033[1;31m
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚£∂‚°ø‚¢ø‚£õ‚£õ‚£õ‚†õ‚†∑‚†∂‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚°ø‚£´‚¢ï‚†¨‚†ì‚†Ç‚†â‚†â‚†ò‚†ì‚†¶‚£Ñ‚†à‚†ì‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ü‚¢ú‚†î‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°ø‚£º‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°á‚¢á‚£§‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£∑‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚£ø‚£ø‚£ø‚£Ø‚£ç‚†õ‚†ª‚£ø‚£∑‚£¶‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚¢Ä‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ß‚†ô‚¢¢‚†ô‚¢ø‚£ø‚£ø‚£∂‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚¢Ä‚£§‚£ø‚£ø‚°ø‚†ü‚†õ‚†õ‚°´‚†ï‚†É‚†Ä‚†Ä‚°á‚†Ä‚†â‚†ª‚†ø‚£ø‚£ø‚£∂‚£§‚£§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚†Ä‚†Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†â‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†£‚†Ä‚†Ä‚¢†‚†É‚†Ä‚¢Ä‚°Ä‚†§‚†Ñ‚†Ä‚†í‚†í‚†í‚†í‚°¢‚†ú‚°©‚†î‚†ä‚†Å‚†Ä‚†Ä‚¢Ä‚†§‚†ê‚†í‚†´‚†¥‚°†‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚¢Ä‚†É‚°†‚†ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°†‚¢ä‚°¥‚†ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚¢†‚†ñ‚†â‚†â‚†ê‚¢å‚†™‚¢Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†á‚°é‚°ú‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°†‚†ä‚°†‚†ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°¥‚†Å‚†Ä‚¢Ä‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢°‚¢©‚†Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢º‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚¢°‚†é‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°†‚†ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°å‚£º‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢Ñ‚†Ä‚†Ä‚†Ä‚¢Ä‚°§‚¢ä‚†î‚†Å‚†Ä‚†Ä‚†Ä‚¢Ä‚°†‚†ä‚£Ä‚£§‚£∂‚£¶‚£Ñ‚†ò‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†Ä‚†á‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚£•‚£ñ‚°à‚†•‚£ê‚£Å‚£Ä‚°Ä‚††‚†Ñ‚¢í‚£°‚£¥‚£æ‚°ø‚†ø‚†ø‚¢ø‚£ø‚£Ü‚¢£‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†É‚†Ä‚¢†‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚£ø‚£ø‚£∑‚†Ä‚£Ä‚†Ñ‚†í‚†í‚†õ‚†õ‚†â‚†â‚†Ä‚†à‚†õ‚†ª‚¢∂‚£Æ‚£õ‚¢¶‚¢¶‚†Ä‚†Ä‚†Ä‚†é‚£º‚†Ä‚†ò‚°ò‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£¥‚£ø‚°ø‚†ø‚†õ‚†Å‚£æ‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚£¶‚†Å‚†≥‚°Ä‚¢∏‚¢∞‚£ø‚°Ñ‚†Ä‚†°‚°à‚†¢‚¢Ñ‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚¢ü‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚£ß‚†Ä‚†à‚†™‚£Ü‚¢ø‚£ø‚£¶‚°Ä‚†ë‚†§‚°Ä‚†±‚°Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°è‚†é‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†à‚†à‚¢ª‚£ø‚£ø‚°Ñ‚†Ä‚†à‚¢¢‚°á
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∑‚¢£‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢à‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£ø‚£∑‚†Ä‚†Ä‚†ò‚†Å
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚°à‚¢Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚£ø‚°Ü‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†£‚°à‚¢Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°ø‚°É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†∫‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£á‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚¢ü‚¢µ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£π‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£´‚£ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚¢û‚£µ‚£ã‚†Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°º‚°±‚¢π‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
\033[0m
endef
export LOGO

# Compilador e flags
CC          := cc
CFLAGS      := -Wall -Wextra -Werror -Iinclude -Ilibft -Ilibft/ft_printf

# Diret√≥rios
SRC_DIR     := src
OBJ_DIR     := obj
INC_DIR     := include
LIBFT_DIR   := libft
LIBFT       := $(LIBFT_DIR)/libft.a

# Nome do bin√°rio
NAME        := push_swap

# Arquivos fonte do projeto principal
SRC_FILES   := main validator utils receiver  stack_a  stack_b stacks small_sort big_sort \
            

# Arquivos fonte do b√¥nus (checker)
BONUS_FILES := checker checker_utils parser init stack_nodes stack_ops utils free_all

# Expande nomes com diret√≥rios e extens√µes
SRC         := $(addprefix $(SRC_DIR)/, $(addsuffix .c, $(SRC_FILES)))

# Objetos correspondentes
OBJ         := $(SRC:$(SRC_DIR)/%.c=$(OBJ_DIR)/%.o)

GREEN   := \033[1;32m
YELLOW  := \033[1;33m
RED     := \033[1;31m
BLUE    := \033[1;34m
RESET   := \033[0m

all: $(NAME)

$(NAME): $(OBJ) $(LIBFT)
	@echo "$$LOGO"
	@echo "$(BLUE)üîß Linking $(NAME)...$(RESET)"
	@$(CC) $(CFLAGS) $(OBJ) $(LIBFT) -o $(NAME)
	@echo "$(GREEN)‚úÖ Build complete: $(NAME)$(RESET)"

# Compila√ß√£o dos .o
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c | $(OBJ_DIR)
	@mkdir -p $(dir $@)
	@$(CC) $(CFLAGS) -c $< -o $@
	@echo "$(YELLOW)Compiled:$(RESET) $<"

$(OBJ_DIR)/%.o: $(BONUS_DIR)/%.c | $(OBJ_DIR)
	@mkdir -p $(dir $@)
	@$(CC) $(CFLAGS) -c $< -o $@
	@echo "$(YELLOW)Compiled (bonus):$(RESET) $<"

# Diret√≥rio de objetos
$(OBJ_DIR):
	@mkdir -p $(OBJ_DIR)

clean:
	@echo "$(RED)üßπ Removing object files...$(RESET)"
	@rm -rf $(OBJ_DIR)
	@$(MAKE) -C $(LIBFT_DIR) clean

fclean: clean
	@echo "$(RED)üóëÔ∏è  Removing executables and libraries...$(RESET)"
	@rm -f $(NAME)
	@$(MAKE) -C $(LIBFT_DIR) fclean

re: fclean all

## Exemplo simples de execu√ß√£o
test: $(NAME)
	@echo "$(BLUE)üöÄ Testando push_swap...$(RESET)"
	@./$(NAME) 2 1 3 5 8
	@echo
	@echo "$(BLUE)üö´ Testando entrada inv√°lida...$(RESET)"
	@./$(NAME) 0 one 2 3 || true

check: $(NAME)
	@echo "$(BLUE)üß† Rodando testes automatizados...$(RESET)"
	@chmod +x test/push_swap_tests.sh
	@./test/push_swap_tests.sh

# Verifica√ß√£o de leaks
valgrind: $(NAME)
	@valgrind --leak-check=full ./$(NAME) 3 2 1

# Norminette
norm:
	@echo "$(BLUE)üìú Checking Norminette...$(RESET)"
	@norminette $(SRC_DIR) $(BONUS_DIR) $(INC_DIR)

# Ajuda
help:
	@echo "$(YELLOW)Available targets:$(RESET)"
	@echo "  all       ‚Äì Compila o projeto principal ($(NAME))"
	@echo "  clean     ‚Äì Remove arquivos objeto"
	@echo "  fclean    ‚Äì Remove objetos e execut√°veis"
	@echo "  re        ‚Äì Reconstr√≥i tudo"
	@echo "  test      ‚Äì Executa teste b√°sico (com exemplo do PDF)"
	@echo "  check     ‚Äì Testa com checker_OS (mostra n√∫mero de opera√ß√µes e OK/KO)"
	@echo "  valgrind  ‚Äì Verifica vazamentos de mem√≥ria"
	@echo "  norm      ‚Äì Executa Norminette"
	@echo "  help      ‚Äì Mostra este menu"

.PHONY: all clean fclean re test valgrind norm help bonus
.SILENT:

# --- Parte secund√°ria / auxiliar ---
$(LIBFT):
	$(MAKE) -C $(LIBFT_DIR)